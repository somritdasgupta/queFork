const MAX_RETRIES=3,RETRY_DELAY=1e3,pendingRequests=new Map;let port=chrome.runtime.connect({name:"content-script"});function reconnectPort(){try{port=chrome.runtime.connect({name:"content-script"}),setupPortListeners()}catch(e){console.error("Failed to reconnect port:",e),setTimeout(reconnectPort,1e3)}}function setupPortListeners(){port.onMessage.addListener((e=>{console.debug("Port received message:",e),"FROM_EXTENSION"===e.type&&window.postMessage(e,"*")}))}async function sendMessageWithRetry(e,t=3){return new Promise(((n,s)=>{const o=r=>{chrome.runtime.sendMessage(e,(e=>{if(chrome.runtime.lastError)return console.debug(`Attempt ${r} failed:`,chrome.runtime.lastError),void(r<t?setTimeout((()=>o(r+1)),1e3):s(new Error("Failed to get response after retries")));n(e)}))};o(1)}))}function injectScript(){const e=document.createElement("script");e.src=chrome.runtime.getURL("inject.js"),e.onload=()=>e.remove(),(document.head||document.documentElement).appendChild(e)}port.onDisconnect.addListener((()=>{console.debug("Port disconnected, attempting reconnect..."),reconnectPort()})),window.addEventListener("message",(async e=>{if(e.source===window)try{switch(e.data.type){case"DETECT_EXTENSION":window.postMessage({type:"EXTENSION_DETECTED",id:e.data.id},"*");break;case"FROM_QUEFORK":if("executeRequest"===e.data.action)try{const t=e.data.id;pendingRequests.set(t,e.data);const n=await sendMessageWithRetry(e.data);window.postMessage({type:"FROM_EXTENSION",action:"executeResponse",id:t,...n},"*"),pendingRequests.delete(t)}catch(t){console.error("Request execution failed:",t),window.postMessage({type:"FROM_EXTENSION",action:"executeResponse",id:e.data.id,success:!1,error:t.message},"*")}break;case"INTERCEPTOR_TOGGLE":await sendMessageWithRetry({action:"toggleInterceptor",enabled:e.data.enabled})}}catch(e){console.error("Message handling failed:",e)}})),chrome.runtime.onMessage.addListener(((e,t,n)=>{if("TO_QUEFORK"===e.type)return window.postMessage({type:"FROM_EXTENSION",...e},"*"),!0})),window.addEventListener("unload",(()=>{port.disconnect(),pendingRequests.clear()})),injectScript(),setupPortListeners();