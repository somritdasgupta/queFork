const storage={get:e=>chrome.storage.local.get(e),set:(e,t)=>chrome.storage.local.set({[e]:t})},PROTECTED_TARGET={url:"https://quefork.somrit.in",pattern:"",mode:"active",protected:!0};let enabledEndpoints=[],interceptorEnabled=!0,targetUrls=["http://localhost:3000"],targets=[PROTECTED_TARGET],activeTargetIndex=0,targetMode="active",roundRobinIndex=0,requestStats={};function updateExtensionBadge(e){chrome.action.setBadgeText({text:e?"ON":"OFF"}),chrome.action.setBadgeBackgroundColor({color:e?"#4ade80":"#94a3b8"})}function formatBytes(e){if(0===e)return"0 B";const t=Math.floor(Math.log(e)/Math.log(1024));return`${parseFloat((e/Math.pow(1024,t)).toFixed(2))} ${["B","KB","MB","GB"][t]}`}function getTargetForUrl(e){switch(targetMode){case"pattern":const t=targets.find((t=>t.pattern&&new RegExp(t.pattern).test(e)));if(t)return t.url;case"roundrobin":return 0===targets.length?null:(roundRobinIndex=(roundRobinIndex+1)%targets.length,targets[roundRobinIndex].url);default:return targets[activeTargetIndex]?.url||null}}function updateStats(e,t){requestStats[e]||(requestStats[e]={count:0,lastAccessed:null,targets:{}}),requestStats[e].count=(requestStats[e].count||0)+1,requestStats[e].lastAccessed=(new Date).toISOString(),requestStats[e].targets||(requestStats[e].targets={}),requestStats[e].targets[t]||(requestStats[e].targets[t]=0),requestStats[e].targets[t]++,chrome.storage.local.set({requestStats:requestStats},(()=>{chrome.runtime.sendMessage({action:"statsUpdated",stats:requestStats})}))}chrome.storage.local.get(["targetUrls"],(e=>{e.targetUrls&&e.targetUrls.length>0&&(targetUrls=e.targetUrls)})),chrome.storage.local.get(["targets","activeTargetIndex","targetMode","requestStats"],(e=>{e.targets&&(targets=e.targets.some((e=>e.url===PROTECTED_TARGET.url))?e.targets:[PROTECTED_TARGET,...e.targets]),"number"==typeof e.activeTargetIndex&&(activeTargetIndex=e.activeTargetIndex),e.targetMode&&(targetMode=e.targetMode),e.requestStats&&(requestStats=e.requestStats)})),chrome.storage.local.get(["interceptorEnabled"],(e=>{"boolean"==typeof e.interceptorEnabled&&(interceptorEnabled=e.interceptorEnabled),updateExtensionBadge(interceptorEnabled)})),chrome.action.onClicked.addListener((e=>{chrome.sidePanel.open({windowId:e.windowId})})),chrome.sidePanel.setOptions({enabled:!0,path:"sidepanel.html"}),chrome.runtime.onMessage.addListener(((e,t,r)=>{if("updateEndpoints"===e.action)return enabledEndpoints=e.endpoints,chrome.storage.local.set({enabledEndpoints:enabledEndpoints},(()=>{r({success:!0})})),!0;if("detectExtension"===e.action)return r({detected:!0}),!1;if("toggleInterceptor"===e.action)return interceptorEnabled=e.enabled,updateExtensionBadge(interceptorEnabled),chrome.runtime.sendMessage({action:"interceptorStateChanged",enabled:interceptorEnabled}),chrome.storage.local.set({interceptorEnabled:interceptorEnabled}),chrome.tabs.query({},(function(e){e.forEach((e=>{chrome.tabs.sendMessage(e.id,{type:"INTERCEPTOR_STATE_CHANGED",enabled:interceptorEnabled})}))})),r({success:!0}),!0;if("executeRequest"===e.action&&interceptorEnabled){console.debug("Background received request:",e);const t=performance.now();return updateStats(e.url,"interceptor"),fetch(e.url,{method:e.method||"GET",headers:e.headers,body:"GET"!==e.method?JSON.stringify(e.body):void 0}).then((async e=>{const a=e.headers.get("content-type");let n;n=a?.includes("application/json")?await e.json():await e.text();const s=new Blob([JSON.stringify(n)]).size,o=performance.now()-t;chrome.runtime.sendMessage({action:"statsUpdated",stats:requestStats}),r({success:!0,response:{status:e.status,statusText:e.statusText,headers:Object.fromEntries(e.headers.entries()),body:n,contentType:a,time:`${Math.round(o)}ms`,size:formatBytes(s)}})})).catch((e=>{console.error("Fetch error:",e),r({success:!1,error:e.message||"Failed to fetch"})})),!0}return"getStats"!==e.action||(r({stats:requestStats}),!1)})),chrome.storage.local.get(["enabledEndpoints"],(e=>{e.enabledEndpoints&&(enabledEndpoints=e.enabledEndpoints)})),chrome.storage.local.get(["interceptorEnabled"],(e=>{"boolean"==typeof e.interceptorEnabled&&(interceptorEnabled=e.interceptorEnabled)}));